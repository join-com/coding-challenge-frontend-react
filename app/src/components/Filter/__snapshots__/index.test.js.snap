// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Component /> should matches the snapshot 1`] = `
<filter>
  <withHandlers(withHandlers(Filter))
    formData={
      Object {
        "occurred_after": "",
        "occurred_before": "",
        "query": "",
      }
    }
    setFormData={[Function]}
  >
    <withHandlers(Filter)
      formData={
        Object {
          "occurred_after": "",
          "occurred_before": "",
          "query": "",
        }
      }
      reset={[Function]}
      setFormData={[Function]}
    >
      <Filter
        formData={
          Object {
            "occurred_after": "",
            "occurred_before": "",
            "query": "",
          }
        }
        handleInputChange={[Function]}
        handleSubmit={[Function]}
        reset={[Function]}
        setFormData={[Function]}
      >
        <styled.form
          className="c-filter"
          onSubmit={[Function]}
        >
          <StyledComponent
            className="c-filter"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "fdgntj",
                  "rules": Array [
                    "
    display: flex;
    margin-bottom: 20px;

    .c-input {
        margin-right: 20px;
    }
",
                  ],
                },
                "displayName": "styled.form",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "form",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onSubmit={[Function]}
          >
            <form
              className="c-filter sc-bxivhb fdgntj"
              onSubmit={[Function]}
            >
              <Input
                classNameMod="search"
                name="query"
                onChange={[Function]}
                placeholder="Search"
                value=""
              >
                <styled.input
                  className="c-input c-input--search"
                  name="query"
                  onChange={[Function]}
                  placeholder="Search"
                  value=""
                >
                  <StyledComponent
                    className="c-input c-input--search"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": true,
                          "lastClassName": "eMKLvb",
                          "rules": Array [
                            "
    margin: 0;
    padding: 5px 10px;
    background-color: #fff;
    border: 1px solid #bbb;
    height: 30px;
    font-size: .9em;

    &.c-input--search {
        width: 400px;
    }

    &.c-input--date {
        width: 170px;
    }
",
                          ],
                        },
                        "displayName": "styled.input",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="query"
                    onChange={[Function]}
                    placeholder="Search"
                    value=""
                  >
                    <input
                      className="c-input c-input--search sc-bdVaJa eMKLvb"
                      name="query"
                      onChange={[Function]}
                      placeholder="Search"
                      value=""
                    />
                  </StyledComponent>
                </styled.input>
              </Input>
              <Input
                classNameMod="date"
                name="occurred_after"
                onChange={[Function]}
                placeholder="From"
                type="date"
                value=""
              >
                <styled.input
                  className="c-input c-input--date"
                  name="occurred_after"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="From"
                  type="text"
                  value=""
                >
                  <StyledComponent
                    className="c-input c-input--date"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": true,
                          "lastClassName": "eMKLvb",
                          "rules": Array [
                            "
    margin: 0;
    padding: 5px 10px;
    background-color: #fff;
    border: 1px solid #bbb;
    height: 30px;
    font-size: .9em;

    &.c-input--search {
        width: 400px;
    }

    &.c-input--date {
        width: 170px;
    }
",
                          ],
                        },
                        "displayName": "styled.input",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="occurred_after"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="From"
                    type="text"
                    value=""
                  >
                    <input
                      className="c-input c-input--date sc-bdVaJa eMKLvb"
                      name="occurred_after"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="From"
                      type="text"
                      value=""
                    />
                  </StyledComponent>
                </styled.input>
              </Input>
              <Input
                classNameMod="date"
                name="occurred_before"
                onChange={[Function]}
                placeholder="To"
                type="date"
                value=""
              >
                <styled.input
                  className="c-input c-input--date"
                  name="occurred_before"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="To"
                  type="text"
                  value=""
                >
                  <StyledComponent
                    className="c-input c-input--date"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": true,
                          "lastClassName": "eMKLvb",
                          "rules": Array [
                            "
    margin: 0;
    padding: 5px 10px;
    background-color: #fff;
    border: 1px solid #bbb;
    height: 30px;
    font-size: .9em;

    &.c-input--search {
        width: 400px;
    }

    &.c-input--date {
        width: 170px;
    }
",
                          ],
                        },
                        "displayName": "styled.input",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="occurred_before"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="To"
                    type="text"
                    value=""
                  >
                    <input
                      className="c-input c-input--date sc-bdVaJa eMKLvb"
                      name="occurred_before"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="To"
                      type="text"
                      value=""
                    />
                  </StyledComponent>
                </styled.input>
              </Input>
              <Button
                tag="button"
                type="submit"
              >
                <styled.button
                  type="submit"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bwzfXH",
                          "isStatic": true,
                          "lastClassName": "bbfpTW",
                          "rules": Array [
                            "
    font-weight: 400;
    text-transform: uppercase;
    margin: 0;
    cursor: pointer;
    border: 0;
    background: none;
    padding: 0 10px;
    color: #fff;
    background-color: #1187d2;
",
                          ],
                        },
                        "displayName": "styled.button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bwzfXH",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    type="submit"
                  >
                    <button
                      className="sc-bwzfXH bbfpTW"
                      type="submit"
                    >
                      Find case
                    </button>
                  </StyledComponent>
                </styled.button>
              </Button>
            </form>
          </StyledComponent>
        </styled.form>
      </Filter>
    </withHandlers(Filter)>
  </withHandlers(withHandlers(Filter))>
</filter>
`;

exports[`<Filter /> should matches the snapshot 1`] = `
<filter>
  <withHandlers(withHandlers(Filter))
    formData={
      Object {
        "occurred_after": "",
        "occurred_before": "",
        "query": "",
      }
    }
    setFormData={[Function]}
  >
    <withHandlers(Filter)
      formData={
        Object {
          "occurred_after": "",
          "occurred_before": "",
          "query": "",
        }
      }
      reset={[Function]}
      setFormData={[Function]}
    >
      <Filter
        formData={
          Object {
            "occurred_after": "",
            "occurred_before": "",
            "query": "",
          }
        }
        handleInputChange={[Function]}
        handleSubmit={[Function]}
        reset={[Function]}
        setFormData={[Function]}
      >
        <styled.form
          className="c-filter"
          onSubmit={[Function]}
        >
          <StyledComponent
            className="c-filter"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "fdgntj",
                  "rules": Array [
                    "
    display: flex;
    margin-bottom: 20px;

    .c-input {
        margin-right: 20px;
    }
",
                  ],
                },
                "displayName": "styled.form",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "form",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onSubmit={[Function]}
          >
            <form
              className="c-filter sc-bxivhb fdgntj"
              onSubmit={[Function]}
            >
              <Input
                classNameMod="search"
                name="query"
                onChange={[Function]}
                placeholder="Search"
                value=""
              >
                <styled.input
                  className="c-input c-input--search"
                  name="query"
                  onChange={[Function]}
                  placeholder="Search"
                  value=""
                >
                  <StyledComponent
                    className="c-input c-input--search"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": true,
                          "lastClassName": "eMKLvb",
                          "rules": Array [
                            "
    margin: 0;
    padding: 5px 10px;
    background-color: #fff;
    border: 1px solid #bbb;
    height: 30px;
    font-size: .9em;

    &.c-input--search {
        width: 400px;
    }

    &.c-input--date {
        width: 170px;
    }
",
                          ],
                        },
                        "displayName": "styled.input",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="query"
                    onChange={[Function]}
                    placeholder="Search"
                    value=""
                  >
                    <input
                      className="c-input c-input--search sc-bdVaJa eMKLvb"
                      name="query"
                      onChange={[Function]}
                      placeholder="Search"
                      value=""
                    />
                  </StyledComponent>
                </styled.input>
              </Input>
              <Input
                classNameMod="date"
                name="occurred_after"
                onChange={[Function]}
                placeholder="From"
                type="date"
                value=""
              >
                <styled.input
                  className="c-input c-input--date"
                  name="occurred_after"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="From"
                  type="text"
                  value=""
                >
                  <StyledComponent
                    className="c-input c-input--date"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": true,
                          "lastClassName": "eMKLvb",
                          "rules": Array [
                            "
    margin: 0;
    padding: 5px 10px;
    background-color: #fff;
    border: 1px solid #bbb;
    height: 30px;
    font-size: .9em;

    &.c-input--search {
        width: 400px;
    }

    &.c-input--date {
        width: 170px;
    }
",
                          ],
                        },
                        "displayName": "styled.input",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="occurred_after"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="From"
                    type="text"
                    value=""
                  >
                    <input
                      className="c-input c-input--date sc-bdVaJa eMKLvb"
                      name="occurred_after"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="From"
                      type="text"
                      value=""
                    />
                  </StyledComponent>
                </styled.input>
              </Input>
              <Input
                classNameMod="date"
                name="occurred_before"
                onChange={[Function]}
                placeholder="To"
                type="date"
                value=""
              >
                <styled.input
                  className="c-input c-input--date"
                  name="occurred_before"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="To"
                  type="text"
                  value=""
                >
                  <StyledComponent
                    className="c-input c-input--date"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": true,
                          "lastClassName": "eMKLvb",
                          "rules": Array [
                            "
    margin: 0;
    padding: 5px 10px;
    background-color: #fff;
    border: 1px solid #bbb;
    height: 30px;
    font-size: .9em;

    &.c-input--search {
        width: 400px;
    }

    &.c-input--date {
        width: 170px;
    }
",
                          ],
                        },
                        "displayName": "styled.input",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "input",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="occurred_before"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="To"
                    type="text"
                    value=""
                  >
                    <input
                      className="c-input c-input--date sc-bdVaJa eMKLvb"
                      name="occurred_before"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="To"
                      type="text"
                      value=""
                    />
                  </StyledComponent>
                </styled.input>
              </Input>
              <Button
                tag="button"
                type="submit"
              >
                <styled.button
                  type="submit"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bwzfXH",
                          "isStatic": true,
                          "lastClassName": "bbfpTW",
                          "rules": Array [
                            "
    font-weight: 400;
    text-transform: uppercase;
    margin: 0;
    cursor: pointer;
    border: 0;
    background: none;
    padding: 0 10px;
    color: #fff;
    background-color: #1187d2;
",
                          ],
                        },
                        "displayName": "styled.button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bwzfXH",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    type="submit"
                  >
                    <button
                      className="sc-bwzfXH bbfpTW"
                      type="submit"
                    >
                      Find case
                    </button>
                  </StyledComponent>
                </styled.button>
              </Button>
            </form>
          </StyledComponent>
        </styled.form>
      </Filter>
    </withHandlers(Filter)>
  </withHandlers(withHandlers(Filter))>
</filter>
`;
